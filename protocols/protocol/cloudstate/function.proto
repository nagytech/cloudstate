// Copyright 2019 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// gRPC definitions for Stateless user functions.
//
//---
//
//`Interaction Specification`:
//
//  - TODO
syntax = "proto3";

package cloudstate.function;

// Any is used so that domain events defined according to the functions business domain can be embedded inside
// the protocol.
import "google/protobuf/any.proto";
import "cloudstate/entity.proto";

option java_package = "io.cloudstate.protocol";

//FunctionCommand TODO
//
//---
//
//`Specification`:
//
//  - A `FunctionCommand` is considered to be valid iff:
//    - `service_name` TODO
//    - `name` TODO
//    - `payload` TODO
message FunctionCommand {
    // The name of the service this function is on.
    // @exclude FIXME Why no ordinal 1?
    string service_name = 2;

    // Command name.
    // @exclude FIXME rename to command_name?
    string name = 3;

    // The command payload.
    google.protobuf.Any payload = 4;
}

//FunctionReply TODO
//
//---
//
//`Specification`:
//
//  - A `FunctionReply` is considered to be valid iff:
//    - `response` MUST be one of the following:
//      - `reply` TODO
//      - `forward` TODO
//    - `side_effects` TODO
message FunctionReply {

    oneof response {
        // @exclude FIXME add Failure? Why no ordinal 1?
        Reply reply = 2;
        Forward forward = 3;
    }
    // TODO
    repeated SideEffect side_effects = 4;
}

//The *StatelessFunction* Service is the entrypoint for stateless User Functions.
//
//---
//
//`Specification`:
//
//  - An implementation of `StatelessFunction` is only valid iff:
//  - `handleUnary`
//    - TODO
//  - `handleStreamedIn`
//    - TODO
//  - `handleStreamedOut`
//    - TODO
//  - `handleStreamed`
//    - TODO
service StatelessFunction {

    // TODO
    rpc handleUnary(FunctionCommand) returns (FunctionReply) {}

    // TODO
    rpc handleStreamedIn(stream FunctionCommand) returns (FunctionReply) {}

    // TODO
    rpc handleStreamedOut(FunctionCommand) returns (stream FunctionReply) {}

    // TODO
    rpc handleStreamed(stream FunctionCommand) returns (stream FunctionReply) {}
}
